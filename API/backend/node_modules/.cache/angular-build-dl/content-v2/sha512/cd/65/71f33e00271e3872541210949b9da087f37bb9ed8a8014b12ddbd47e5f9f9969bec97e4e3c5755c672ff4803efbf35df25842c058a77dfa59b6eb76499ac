{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/add-owner/add-owner.component.ts","webpack:///src/app/components/add-owner/add-owner.component.html","webpack:///src/app/components/edit-owner/edit-owner.component.ts","webpack:///src/app/components/edit-owner/edit-owner.component.html","webpack:///src/app/components/owners-list/owners-list.component.ts","webpack:///src/app/components/owners-list/owners-list.component.html","webpack:///src/app/material.module.ts","webpack:///src/app/shared/api.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","redirectTo","component","AppRoutingModule","forRoot","imports","AppComponent","opened","console","log","window","innerWidth","sidenav","fixedTopGap","event","target","width","document","documentElement","clientWidth","body","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","schemas","AddOwnerComponent","fb","router","ngZone","ownerApi","visible","selectable","removable","addOnBlur","separatorKeysCodes","handleError","controlName","errorName","ownerForm","controls","hasError","submitBookForm","group","owner_name","required","license_plate","input","value","valid","AddOwner","subscribe","res","run","navigateByUrl","submitOwnerForm","EditOwnerComponent","actRoute","subjectArray","SectioinArray","OwnerForm","snapshot","paramMap","get","GetOwner","data","subjects","updateBookForm","trim","length","push","name","subject","index","indexOf","splice","convertDate","Date","toISOString","substring","setValue","onlyself","confirm","UpdateOwner","updateOwnerForm","add","formatDate","OwnersListComponent","OwnerData","displayedColumns","GetOwners","dataSource","setTimeout","paginator","pageIndex","pageSize","DeleteOwner","_id","AngularMaterialModule","ApiService","http","endpoint","headers","set","API_URL","post","pipe","errorMgmt","put","error","errorMessage","ErrorEvent","message","status","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddOwnerComponent } from './components/add-owner/add-owner.component';\nimport { EditOwnerComponent } from './components/edit-owner/edit-owner.component';\nimport { OwnersListComponent } from './components/owners-list/owners-list.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'add-owner' },\n  { path: 'add-owner', component: AddOwnerComponent },\n  { path: 'edit-owner/:id', component: EditOwnerComponent },\n  { path: 'owners-list', component: OwnersListComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","import { Component, ViewChild, HostListener, OnInit } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  opened = true;\n  @ViewChild('sidenav', { static: true }) sidenav: MatSidenav;\n\n  ngOnInit() {\n    console.log(window.innerWidth)\n    if (window.innerWidth < 768) {\n      this.sidenav.fixedTopGap = 55;\n      this.opened = false;\n    } else {\n      this.sidenav.fixedTopGap = 55;\n      this.opened = true;\n    }\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    if (event.target.innerWidth < 768) {\n      this.sidenav.fixedTopGap = 55;\n      this.opened = false;\n    } else {\n      this.sidenav.fixedTopGap = 55\n      this.opened = true;\n    }\n  }\n\n  isBiggerScreen() {\n    const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    if (width < 768) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","<!-- Toolbar -->\n<mat-toolbar color=\"primary\" class=\"header\">\n  <div>Owner Records</div>\n  <span class=\"nav-tool-items\">\n    <mat-icon (click)=\"sidenav.toggle()\" class=\"hamburger\">menu</mat-icon>\n  </span>\n</mat-toolbar>\n\n<mat-sidenav-container>\n  <!-- Sidenav -->\n  <mat-sidenav #sidenav [mode]=\"isBiggerScreen() ? 'over' : 'side'\" [(opened)]=\"opened\" [fixedInViewport]=\"true\"\n    [fixedTopGap]>\n    <mat-nav-list>\n      <a mat-list-item routerLinkActive=\"active\" routerLink=\"/add-owner\">\n        <mat-icon>add</mat-icon> Add Owner\n      </a>\n      <a mat-list-item routerLinkActive=\"active\" routerLink=\"/owners-list\">\n        <mat-icon>format_list_bulleted</mat-icon> View Owners\n      </a>\n    </mat-nav-list>\n  </mat-sidenav>\n\n  <!-- Main content -->\n  <mat-sidenav-content>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n/* Angular components */\nimport { AddOwnerComponent } from './components/add-owner/add-owner.component';\nimport { EditOwnerComponent } from './components/edit-owner/edit-owner.component';\nimport { OwnersListComponent } from './components/owners-list/owners-list.component';\n\n/* Angular material */\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AngularMaterialModule } from './material.module';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\n/* Angular http service */\nimport { HttpClientModule } from '@angular/common/http';\n\n/* Angular CRUD services */\nimport { ApiService } from './shared/api.service';\n\n/* Reactive form services in Angular 8 */\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddOwnerComponent,\n    EditOwnerComponent,\n    OwnersListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AngularMaterialModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule { }\n","import { Router } from '@angular/router';\nimport { Component, OnInit, ViewChild, NgZone } from '@angular/core';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { ApiService } from './../../shared/api.service';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n\nexport interface Subject {\n  name: string;\n}\n\n@Component({\n  selector: 'app-add-owner',\n  templateUrl: './add-owner.component.html',\n  styleUrls: ['./add-owner.component.css']\n})\n\nexport class AddOwnerComponent implements OnInit {\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n  @ViewChild('chipList', { static: true }) chipList;\n  @ViewChild('resetOwnerForm', { static: true }) myNgForm;\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n  ownerForm: FormGroup;\n  \n  \n\n  ngOnInit() {\n    this.submitBookForm();\n  }\n\n  constructor(\n    public fb: FormBuilder,\n    private router: Router,\n    private ngZone: NgZone,\n    private ownerApi: ApiService\n  ) { }\n\n  /* Reactive book form */\n  submitBookForm() {\n    this.ownerForm = this.fb.group({\n      owner_name: ['', [Validators.required]],\n      license_plate: ['', [Validators.required]],\n    })\n  }\n\n  /* Add dynamic languages */\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n    \n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n  }\n\n  /* Get errors */\n  public handleError = (controlName: string, errorName: string) => {\n    return this.ownerForm.controls[controlName].hasError(errorName);\n  }  \n\n  /* Submit book */\n  submitOwnerForm() {\n    if (this.ownerForm.valid) {\n      this.ownerApi.AddOwner(this.ownerForm.value).subscribe(res => {\n        this.ngZone.run(() => this.router.navigateByUrl('/owners-list'))\n      });\n    }\n  }\n\n}","<!-- Title group  -->\n<div class=\"title-group\">\n  <h1 class=\"mat-h1\">Add Owner</h1>\n  <mat-divider fxFlex=\"1 0\"></mat-divider>\n</div>\n\n<!-- Form -->\n<div class=\"inner-wrapper\">\n  <form [formGroup]=\"ownerForm\" (ngSubmit)=\"submitOwnerForm()\" #resetOwnerForm=\"ngForm\" novalidate>\n    <!-- Left block -->\n    <mat-card>\n      <div class=\"controlers-wrapper\">\n        <!-- Name -->\n        <mat-form-field class=\"example-full-width\">\n          <input matInput placeholder=\"Owner name\" formControlName=\"owner_name\">\n          <mat-error *ngIf=\"handleError('owner_name', 'required')\">\n            You must provide a <strong>owners name</strong>\n          </mat-error>\n        </mat-form-field>\n\n        <!-- License plate -->\n        <mat-form-field class=\"example-full-width\">\n          <input matInput placeholder=\"License plate\" formControlName=\"license_plate\">\n          <mat-error *ngIf=\"handleError('license_plate', 'required')\">\n            You must provide a <strong>license plate number in format: LTU123</strong>\n          </mat-error>\n        </mat-form-field>\n\n      </div>\n    </mat-card>\n\n    <!-- Right block -->\n    <mat-card>\n      <div class=\"controlers-wrapper\"></div>\n    </mat-card>\n\n    <!-- Submit & Reset -->\n    <mat-card>\n      <div class=\"full-wrapper button-wrapper\">\n        <div class=\"button-wrapper\">\n          <button mat-flat-button color=\"warn\">Submit</button>\n        </div>\n      </div>\n    </mat-card>\n  </form>\n</div>\n","import { Router, ActivatedRoute } from '@angular/router';\nimport { Component, OnInit, ViewChild, NgZone } from '@angular/core';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { ApiService } from './../../shared/api.service';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n\nexport interface Subject {\n  name: string;\n}\n\n@Component({\n  selector: 'app-edit-owner',\n  templateUrl: './edit-owner.component.html',\n  styleUrls: ['./edit-owner.component.css']\n})\n\nexport class EditOwnerComponent implements OnInit {\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n  @ViewChild('chipList', { static: true }) chipList;\n  @ViewChild('resetOwnerForm', { static: true }) myNgForm;\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n  OwnerForm: FormGroup;\n  subjectArray: Subject[] = [];\n  SectioinArray: any = [];\n\n  ngOnInit() {\n    this.updateBookForm();\n  }\n\n  constructor(\n    public fb: FormBuilder,\n    private router: Router,\n    private ngZone: NgZone,\n    private actRoute: ActivatedRoute,\n    private ownerApi: ApiService\n  ) { \n    var id = this.actRoute.snapshot.paramMap.get('id');\n    this.ownerApi.GetOwner(id).subscribe(data => {\n      console.log(data.subjects)\n      this.subjectArray = data.subjects;\n      this.OwnerForm = this.fb.group({\n        owner_name: [data.owner_name, [Validators.required]],\n        license_plate: [data.license_plate, [Validators.required]],\n      })      \n    })    \n  }\n\n  /* Reactive book form */\n  updateBookForm() {\n    this.OwnerForm = this.fb.group({\n     owner_name: ['', [Validators.required]],\n      license_plate: ['', [Validators.required]],\n    })\n  }\n\n  /* Add dynamic languages */\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n    // Add language\n    if ((value || '').trim() && this.subjectArray.length < 5) {\n      this.subjectArray.push({ name: value.trim() })\n    }\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n  }\n\n  /* Remove dynamic languages */\n  remove(subject: Subject): void {\n    const index = this.subjectArray.indexOf(subject);\n    if (index >= 0) {\n      this.subjectArray.splice(index, 1);\n    }\n  }\n\n  /* Date */\n  formatDate(e) {\n    var convertDate = new Date(e.target.value).toISOString().substring(0, 10);\n    this.OwnerForm.get('dob').setValue(convertDate, {\n      onlyself: true\n    })\n  }\n\n  /* Get errors */\n  public handleError = (controlName: string, errorName: string) => {\n    return this.OwnerForm.controls[controlName].hasError(errorName);\n  }\n\n  /* Update book */\n  updateOwnerForm() {\n    console.log(this.OwnerForm.value)\n    var id = this.actRoute.snapshot.paramMap.get('id');\n    if (window.confirm('Are you sure you want to update?')) {\n      this.ownerApi.UpdateOwner(id, this.OwnerForm.value).subscribe( res => {\n        this.ngZone.run(() => this.router.navigateByUrl('/owners-list'))\n      });\n    }\n  }\n  \n}\n","<!-- Title group  -->\n<div class=\"title-group\">\n    <h1 class=\"mat-h1\">Add Owner</h1>\n    <mat-divider fxFlex=\"1 0\"></mat-divider>\n  </div>\n  \n  <!-- Form -->\n  <div class=\"inner-wrapper\">\n    <form [formGroup]=\"OwnerForm\" (ngSubmit)=\"updateOwnerForm()\" #resetOwnerForm=\"ngForm\" novalidate>\n      <!-- Left block -->\n      <mat-card>\n        <div class=\"controlers-wrapper\">\n          <!-- Name -->\n          <mat-form-field class=\"example-full-width\">\n            <input matInput placeholder=\"Owner name\" formControlName=\"owner_name\">\n            <mat-error *ngIf=\"handleError('owner_name', 'required')\">\n              You must provide a<strong>owner name</strong>\n            </mat-error>\n          </mat-form-field>\n  \n          <!-- License plate -->\n          <mat-form-field class=\"example-full-width\">\n            <input matInput placeholder=\"License plate\" formControlName=\"license_plate\">\n            <mat-error *ngIf=\"handleError('license_plate', 'required')\">\n              You must provide a<strong>license plate number</strong>\n            </mat-error>\n          </mat-form-field>\n\n      </div>\n    </mat-card>\n\n    <!-- Right block -->\n    <mat-card>\n      <div class=\"controlers-wrapper\">\n        <!-- Add subjects -->\n        <mat-form-field class=\"multiple-items\">\n          <mat-chip-list #chipList>\n            <mat-chip *ngFor=\"let subjectArray of subjectArray\" [selectable]=\"selectable\" [removable]=\"removable\"\n              (removed)=\"remove(subjectArray)\">\n              {{subjectArray.name}}\n              <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n            </mat-chip>\n            <input placeholder=\"Add subject\" [matChipInputFor]=\"chipList\"\n              [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=\"addOnBlur\"\n              (matChipInputTokenEnd)=\"add($event)\">\n          </mat-chip-list>\n          <i class=\"material-icons tooltip-info\" matTooltip=\"Enter subject name and press enter to add subjects\">\n            info\n          </i>\n        </mat-form-field>\n\n        <!-- Date of birth -->\n        <mat-form-field>\n          <input matInput readonly [matDatepicker]=\"picker\" placeholder=\"Date of birth\" formControlName=\"dob\"\n            (dateChange)=\"formatDate($event)\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n          <mat-error *ngIf=\"handleError('dob', 'required')\">\n            Date of birth is required\n          </mat-error>\n        </mat-form-field>\n\n        <!-- Gender -->\n        <div class=\"misc-bottom-padding\">\n          <mat-label>Gender:</mat-label>\n          <mat-radio-group aria-label=\"Select an option\" formControlName=\"gender\">\n            <mat-radio-button value=\"Male\">Male</mat-radio-button>\n            <mat-radio-button value=\"Female\">Female</mat-radio-button>\n          </mat-radio-group>\n        </div>\n      </div>\n    </mat-card>\n  \n      <!-- Submit & Reset -->\n      <mat-card>\n        <div class=\"full-wrapper button-wrapper\">\n          <div class=\"button-wrapper\">\n            <button mat-flat-button color=\"warn\">Update</button>\n          </div>\n        </div>\n      </mat-card>\n    </form>\n  </div>\n  ","import { Owner} from './../../shared/owner';\nimport { ApiService } from './../../shared/api.service';\nimport { Component, ViewChild, OnInit } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-owners-list',\n  templateUrl: './owners-list.component.html',\n  styleUrls: ['./owners-list.component.css']\n})\n\nexport class OwnersListComponent implements OnInit {\n  OwnerData: any = [];\n  dataSource: MatTableDataSource<Owner>;\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  displayedColumns: string[] = ['_id', 'owner_name', 'license_plate', 'action'];\n\n  constructor(private ownerApi: ApiService) {\n    this.ownerApi.GetOwners().subscribe(data => {\n      this.OwnerData = data;\n      this.dataSource = new MatTableDataSource<Owner>(this.OwnerData);\n      setTimeout(() => {\n        this.dataSource.paginator = this.paginator;\n      }, 0);\n    })    \n  }\n\n  ngOnInit() { }\n\n  deleteOwner(index: number, e){\n    if(window.confirm('Are you sure')) {\n      const data = this.dataSource.data;\n      data.splice((this.paginator.pageIndex * this.paginator.pageSize) + index, 1);\n      this.dataSource.data = data;\n      this.ownerApi.DeleteOwner(e._id).subscribe()\n    }\n  }\n\n}","<!-- Title group  -->\n<div class=\"title-group\">\n    <h1 class=\"mat-h1\">Owners List</h1>\n    <mat-divider fxFlex=\"1 0\"></mat-divider>\n  </div>\n  \n  <p *ngIf=\"OwnerData.length <= 0\" class=\"no-data\">There is no owner of license plate added yet!</p>\n  \n  <div class=\"container\" *ngIf=\"OwnerData.length > 0\">\n    <div class=\"mat-elevation-z8\">\n      <table mat-table [dataSource]=\"dataSource\">\n        <ng-container matColumnDef=\"_id\">\n          <th mat-header-cell *matHeaderCellDef> Owner ID </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element._id}} </td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"owner_name\">\n          <th mat-header-cell *matHeaderCellDef> Owner Name </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.owner_name}} </td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"license_plate\">\n          <th mat-header-cell *matHeaderCellDef> License plate number </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.license_plate}} </td>\n        </ng-container>\n  \n  \n        <ng-container matColumnDef=\"action\">\n          <th mat-header-cell *matHeaderCellDef> Action </th>\n          <td mat-cell *matCellDef=\"let element; let i = index;\">\n            <button mat-raised-button color=\"primary\" class=\"push-right\"\n              [routerLink]=\"['/edit-owner/', element._id]\">Edit</button>\n            <button mat-raised-button color=\"accent\" (click)=\"deleteOwner(i, element)\">Delete</button>\n          </td>\n        </ng-container>\n  \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n  \n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n    </div>\n  </div>\n  ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n   imports: [\n      CommonModule,\n      MatButtonModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatSidenavModule,\n      MatBadgeModule,\n      MatListModule,\n      MatGridListModule,\n      MatFormFieldModule,\n      MatInputModule,\n      MatSelectModule,\n      MatRadioModule,\n      MatDatepickerModule,\n      MatNativeDateModule,\n      MatChipsModule,\n      MatTooltipModule,\n      MatTableModule,\n      MatPaginatorModule\n   ],\n   exports: [\n      MatButtonModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatSidenavModule,\n      MatBadgeModule,\n      MatListModule,\n      MatGridListModule,\n      MatInputModule,\n      MatFormFieldModule,\n      MatSelectModule,\n      MatRadioModule,\n      MatDatepickerModule,\n      MatChipsModule,\n      MatTooltipModule,\n      MatTableModule,\n      MatPaginatorModule\n   ],\n   providers: [\n      MatDatepickerModule,\n   ]\n})\n\nexport class AngularMaterialModule { }","import { Injectable } from '@angular/core';\nimport { Owner } from './owner';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiService {\n\n  endpoint: string = 'http://localhost:8000/api';\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  constructor(private http: HttpClient) { }\n\n  // Add owner\n  AddOwner(data: Owner): Observable<any> {\n    let API_URL = `${this.endpoint}/add-ownert`;\n    return this.http.post(API_URL, data)\n      .pipe(\n        catchError(this.errorMgmt)\n      )\n  }\n\n  // Get all owners\n  GetOwners() {\n    return this.http.get(`${this.endpoint}`);\n  }\n\n  // Get owner\n  GetOwner(id): Observable<any> {\n    let API_URL = `${this.endpoint}/read-owner/${id}`;\n    return this.http.get(API_URL, { headers: this.headers })\n      .pipe(\n        map((res: Response) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n\n  // Update owner\n  UpdateOwner(id, data): Observable<any> {\n    let API_URL = `${this.endpoint}/update-owner/${id}`;\n    return this.http.put(API_URL, data, { headers: this.headers })\n      .pipe(\n        catchError(this.errorMgmt)\n      )\n  }\n\n  // Delete owner\n  DeleteOwner(id): Observable<any> {\n    var API_URL = `${this.endpoint}/delete-owner/${id}`;\n    return this.http.delete(API_URL)\n      .pipe(\n        catchError(this.errorMgmt)\n      )\n  }\n\n  // Error handling \n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}